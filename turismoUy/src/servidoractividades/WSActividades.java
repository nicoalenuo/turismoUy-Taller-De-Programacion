
package servidoractividades;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;
import net.java.dev.jaxb.array.StringArray;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "WSActividades", targetNamespace = "http://servidorActividades/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    servidoractividades.ObjectFactory.class,
    net.java.dev.jaxb.array.ObjectFactory.class
})
public interface WSActividades {


    /**
     * 
     * @param fileName
     * @return
     *     returns byte[]
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorActividades/WSActividades/getFileRequest", output = "http://servidorActividades/WSActividades/getFileResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://servidorActividades/WSActividades/getFile/Fault/IOException")
    })
    public byte[] getFile(
        @WebParam(name = "fileName", partName = "fileName")
        String fileName)
        throws IOException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns servidoractividades.StringDTActividadMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorActividades/WSActividades/obtenerActividadesConfirmadasDelDepartamentoRequest", output = "http://servidorActividades/WSActividades/obtenerActividadesConfirmadasDelDepartamentoResponse")
    public StringDTActividadMap obtenerActividadesConfirmadasDelDepartamento(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidoractividades.SetOfDTActividad
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorActividades/WSActividades/obtenerActividadesFinalizadasDeProvRequest", output = "http://servidorActividades/WSActividades/obtenerActividadesFinalizadasDeProvResponse")
    public SetOfDTActividad obtenerActividadesFinalizadasDeProv(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidoractividades.StringDTActividadMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorActividades/WSActividades/obtenerActividadesConfirmadasDeCategoriaRequest", output = "http://servidorActividades/WSActividades/obtenerActividadesConfirmadasDeCategoriaResponse")
    public StringDTActividadMap obtenerActividadesConfirmadasDeCategoria(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @return
     *     returns servidoractividades.StringDTDepartamentoMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorActividades/WSActividades/obtenerDepartamentosRequest", output = "http://servidorActividades/WSActividades/obtenerDepartamentosResponse")
    public StringDTDepartamentoMap obtenerDepartamentos();

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @throws ActividadRepetidaException_Exception
     * @throws CategoriaInvalidaException_Exception
     * @throws CostoEsCeroException_Exception
     * @throws DepartamentoInvalidoException_Exception
     * @throws DuracionEsCeroException_Exception
     */
    @WebMethod
    @Action(input = "http://servidorActividades/WSActividades/confirmarAltaActividadRequest", output = "http://servidorActividades/WSActividades/confirmarAltaActividadResponse", fault = {
        @FaultAction(className = ActividadRepetidaException_Exception.class, value = "http://servidorActividades/WSActividades/confirmarAltaActividad/Fault/ActividadRepetidaException"),
        @FaultAction(className = DepartamentoInvalidoException_Exception.class, value = "http://servidorActividades/WSActividades/confirmarAltaActividad/Fault/DepartamentoInvalidoException"),
        @FaultAction(className = CategoriaInvalidaException_Exception.class, value = "http://servidorActividades/WSActividades/confirmarAltaActividad/Fault/CategoriaInvalidaException"),
        @FaultAction(className = DuracionEsCeroException_Exception.class, value = "http://servidorActividades/WSActividades/confirmarAltaActividad/Fault/DuracionEsCeroException"),
        @FaultAction(className = CostoEsCeroException_Exception.class, value = "http://servidorActividades/WSActividades/confirmarAltaActividad/Fault/CostoEsCeroException")
    })
    public void confirmarAltaActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        DtActividad arg2,
        @WebParam(name = "arg3", partName = "arg3")
        StringArray arg3)
        throws ActividadRepetidaException_Exception, CategoriaInvalidaException_Exception, CostoEsCeroException_Exception, DepartamentoInvalidoException_Exception, DuracionEsCeroException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://servidorActividades/WSActividades/quitarActividadFavoritaRequest", output = "http://servidorActividades/WSActividades/quitarActividadFavoritaResponse")
    public void quitarActividadFavorita(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns servidoractividades.SetOfString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorActividades/WSActividades/obtenerActividadesFavoritasRequest", output = "http://servidorActividades/WSActividades/obtenerActividadesFavoritasResponse")
    public SetOfString obtenerActividadesFavoritas(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        StringDTActividadMap arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidoractividades.StringDTSalidaMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorActividades/WSActividades/obtenerSalidasDeActividadRequest", output = "http://servidorActividades/WSActividades/obtenerSalidasDeActividadResponse")
    public StringDTSalidaMap obtenerSalidasDeActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://servidorActividades/WSActividades/agregarActividadFavoritaRequest", output = "http://servidorActividades/WSActividades/agregarActividadFavoritaResponse")
    public void agregarActividadFavorita(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidoractividades.SetOfString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorActividades/WSActividades/obtenerCategoriasDeActividadRequest", output = "http://servidorActividades/WSActividades/obtenerCategoriasDeActividadResponse")
    public SetOfString obtenerCategoriasDeActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidoractividades.StringDTPaqueteMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorActividades/WSActividades/obtenerDatosPaquetesDeActividadRequest", output = "http://servidorActividades/WSActividades/obtenerDatosPaquetesDeActividadResponse")
    public StringDTPaqueteMap obtenerDatosPaquetesDeActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @return
     *     returns servidoractividades.StringDTActividadMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorActividades/WSActividades/busquedaRequest", output = "http://servidorActividades/WSActividades/busquedaResponse")
    public StringDTActividadMap busqueda(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     */
    @WebMethod
    @Action(input = "http://servidorActividades/WSActividades/guardarImgRequest", output = "http://servidorActividades/WSActividades/guardarImgResponse")
    public void guardarImg(
        @WebParam(name = "arg0", partName = "arg0")
        boolean arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        byte[] arg2);

    /**
     * 
     * @param arg0
     * @throws ActividadEnPaqueteException_Exception
     * @throws TieneSalidaVigenteException_Exception
     */
    @WebMethod
    @Action(input = "http://servidorActividades/WSActividades/finalizarActividadRequest", output = "http://servidorActividades/WSActividades/finalizarActividadResponse", fault = {
        @FaultAction(className = TieneSalidaVigenteException_Exception.class, value = "http://servidorActividades/WSActividades/finalizarActividad/Fault/TieneSalidaVigenteException"),
        @FaultAction(className = ActividadEnPaqueteException_Exception.class, value = "http://servidorActividades/WSActividades/finalizarActividad/Fault/ActividadEnPaqueteException")
    })
    public void finalizarActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws ActividadEnPaqueteException_Exception, TieneSalidaVigenteException_Exception
    ;

    /**
     * 
     * @return
     *     returns servidoractividades.StringDTCategoriaMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorActividades/WSActividades/obtenerCategoriasRequest", output = "http://servidorActividades/WSActividades/obtenerCategoriasResponse")
    public StringDTCategoriaMap obtenerCategorias();

    /**
     * 
     * @param arg0
     * @return
     *     returns servidoractividades.DtActividad
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorActividades/WSActividades/darDatosActividadRequest", output = "http://servidorActividades/WSActividades/darDatosActividadResponse")
    public DtActividad darDatosActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorActividades/WSActividades/esFavoritoRequest", output = "http://servidorActividades/WSActividades/esFavoritoResponse")
    public boolean esFavorito(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

}
