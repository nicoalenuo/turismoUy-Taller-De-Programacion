
package servidoractividades;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Properties;

import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "WSActividadesService", targetNamespace = "http://servidorActividades/")
public class WSActividadesService
    extends Service
{

    private final static URL WSACTIVIDADESSERVICE_WSDL_LOCATION;
    private final static WebServiceException WSACTIVIDADESSERVICE_EXCEPTION;
    private final static QName WSACTIVIDADESSERVICE_QNAME = new QName("http://servidorActividades/", "WSActividadesService");

    static {
    	URL url = null;
        WebServiceException e = null;
        try {
        	Properties properties = new Properties();
			properties.load(new FileInputStream(new File(System.getProperty("user.home") + "/.turismoUy/conf.properties")));
            url = new URL((String) properties.get("WSA.IP") + "?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        } catch (FileNotFoundException e1) {
			e1.printStackTrace();
		} catch (IOException e1) {
			e1.printStackTrace();
		}
        WSACTIVIDADESSERVICE_WSDL_LOCATION = url;
        WSACTIVIDADESSERVICE_EXCEPTION = e;
    }

    public WSActividadesService() {
        super(__getWsdlLocation(), WSACTIVIDADESSERVICE_QNAME);
    }

    public WSActividadesService(WebServiceFeature... features) {
        super(__getWsdlLocation(), WSACTIVIDADESSERVICE_QNAME, features);
    }

    public WSActividadesService(URL wsdlLocation) {
        super(wsdlLocation, WSACTIVIDADESSERVICE_QNAME);
    }

    public WSActividadesService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WSACTIVIDADESSERVICE_QNAME, features);
    }

    public WSActividadesService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSActividadesService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns WSActividades
     */
    @WebEndpoint(name = "WSActividadesPort")
    public WSActividades getWSActividadesPort() {
        return super.getPort(new QName("http://servidorActividades/", "WSActividadesPort"), WSActividades.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSActividades
     */
    @WebEndpoint(name = "WSActividadesPort")
    public WSActividades getWSActividadesPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://servidorActividades/", "WSActividadesPort"), WSActividades.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WSACTIVIDADESSERVICE_EXCEPTION!= null) {
            throw WSACTIVIDADESSERVICE_EXCEPTION;
        }
        return WSACTIVIDADESSERVICE_WSDL_LOCATION;
    }

}
