
package servidorsalidas;

import javax.xml.datatype.XMLGregorianCalendar;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "WSSalidas", targetNamespace = "http://servidorSalidas/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSSalidas {


    /**
     * 
     * @param fileName
     * @return
     *     returns byte[]
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorSalidas/WSSalidas/getFileRequest", output = "http://servidorSalidas/WSSalidas/getFileResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://servidorSalidas/WSSalidas/getFile/Fault/IOException")
    })
    public byte[] getFile(
        @WebParam(name = "fileName", partName = "fileName")
        String fileName)
        throws IOException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorsalidas.StringDTActividadMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorSalidas/WSSalidas/obtenerActividadesConfirmadasDelDepartamentoRequest", output = "http://servidorSalidas/WSSalidas/obtenerActividadesConfirmadasDelDepartamentoResponse")
    public StringDTActividadMap obtenerActividadesConfirmadasDelDepartamento(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @return
     *     returns servidorsalidas.StringDTDepartamentoMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorSalidas/WSSalidas/obtenerDepartamentosRequest", output = "http://servidorSalidas/WSSalidas/obtenerDepartamentosResponse")
    public StringDTDepartamentoMap obtenerDepartamentos();

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorsalidas.StringDTPaqueteMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorSalidas/WSSalidas/obtenerDatosPaquetesDeActividadRequest", output = "http://servidorSalidas/WSSalidas/obtenerDatosPaquetesDeActividadResponse")
    public StringDTPaqueteMap obtenerDatosPaquetesDeActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @return
     *     returns servidorsalidas.StringDTPaqueteMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorSalidas/WSSalidas/obtenerDatosPaquetesRequest", output = "http://servidorSalidas/WSSalidas/obtenerDatosPaquetesResponse")
    public StringDTPaqueteMap obtenerDatosPaquetes();

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorsalidas.StringDTSalidaMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorSalidas/WSSalidas/listarSalidasVigentesRequest", output = "http://servidorSalidas/WSSalidas/listarSalidasVigentesResponse")
    public StringDTSalidaMap listarSalidasVigentes(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns servidorsalidas.StringDTPaqueteMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorSalidas/WSSalidas/filtrarPaquetesUsuarioRequest", output = "http://servidorSalidas/WSSalidas/filtrarPaquetesUsuarioResponse")
    public StringDTPaqueteMap filtrarPaquetesUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        StringDTPaqueteMap arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorsalidas.DtActividad
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorSalidas/WSSalidas/darDatosActividadRequest", output = "http://servidorSalidas/WSSalidas/darDatosActividadResponse")
    public DtActividad darDatosActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     */
    @WebMethod
    @Action(input = "http://servidorSalidas/WSSalidas/guardarImgRequest", output = "http://servidorSalidas/WSSalidas/guardarImgResponse")
    public void guardarImg(
        @WebParam(name = "arg0", partName = "arg0")
        boolean arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        byte[] arg2);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorSalidas/WSSalidas/darDepSalRequest", output = "http://servidorSalidas/WSSalidas/darDepSalResponse")
    public String darDepSal(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorSalidas/WSSalidas/darNombreActSalRequest", output = "http://servidorSalidas/WSSalidas/darNombreActSalResponse")
    public String darNombreActSal(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorsalidas.DtSalida
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorSalidas/WSSalidas/datosSalidaRequest", output = "http://servidorSalidas/WSSalidas/datosSalidaResponse")
    public DtSalida datosSalida(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @throws ActividadInvalidaException_Exception
     * @throws CantidadTuristaException_Exception
     * @throws DepartamentoInvalidoException_Exception
     * @throws InscripcionExistenteException_Exception
     * @throws PaqueteInvalidoException_Exception
     * @throws SalidaInvalidaException_Exception
     * @throws SalidaLlenaException_Exception
     */
    @WebMethod
    @Action(input = "http://servidorSalidas/WSSalidas/inscribirTuristaRequest", output = "http://servidorSalidas/WSSalidas/inscribirTuristaResponse", fault = {
        @FaultAction(className = SalidaLlenaException_Exception.class, value = "http://servidorSalidas/WSSalidas/inscribirTurista/Fault/SalidaLlenaException"),
        @FaultAction(className = SalidaInvalidaException_Exception.class, value = "http://servidorSalidas/WSSalidas/inscribirTurista/Fault/SalidaInvalidaException"),
        @FaultAction(className = ActividadInvalidaException_Exception.class, value = "http://servidorSalidas/WSSalidas/inscribirTurista/Fault/ActividadInvalidaException"),
        @FaultAction(className = PaqueteInvalidoException_Exception.class, value = "http://servidorSalidas/WSSalidas/inscribirTurista/Fault/PaqueteInvalidoException"),
        @FaultAction(className = DepartamentoInvalidoException_Exception.class, value = "http://servidorSalidas/WSSalidas/inscribirTurista/Fault/DepartamentoInvalidoException"),
        @FaultAction(className = CantidadTuristaException_Exception.class, value = "http://servidorSalidas/WSSalidas/inscribirTurista/Fault/CantidadTuristaException"),
        @FaultAction(className = InscripcionExistenteException_Exception.class, value = "http://servidorSalidas/WSSalidas/inscribirTurista/Fault/InscripcionExistenteException")
    })
    public void inscribirTurista(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        int arg1,
        @WebParam(name = "arg2", partName = "arg2")
        XMLGregorianCalendar arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6)
        throws ActividadInvalidaException_Exception, CantidadTuristaException_Exception, DepartamentoInvalidoException_Exception, InscripcionExistenteException_Exception, PaqueteInvalidoException_Exception, SalidaInvalidaException_Exception, SalidaLlenaException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @throws ActividadInvalidaException_Exception
     * @throws CantidadTuristaException_Exception
     * @throws SalidaRepetidaException_Exception
     */
    @WebMethod
    @Action(input = "http://servidorSalidas/WSSalidas/ingresarSalidaRequest", output = "http://servidorSalidas/WSSalidas/ingresarSalidaResponse", fault = {
        @FaultAction(className = SalidaRepetidaException_Exception.class, value = "http://servidorSalidas/WSSalidas/ingresarSalida/Fault/SalidaRepetidaException"),
        @FaultAction(className = ActividadInvalidaException_Exception.class, value = "http://servidorSalidas/WSSalidas/ingresarSalida/Fault/ActividadInvalidaException"),
        @FaultAction(className = CantidadTuristaException_Exception.class, value = "http://servidorSalidas/WSSalidas/ingresarSalida/Fault/CantidadTuristaException")
    })
    public void ingresarSalida(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        DtSalida arg1)
        throws ActividadInvalidaException_Exception, CantidadTuristaException_Exception, SalidaRepetidaException_Exception
    ;

}
