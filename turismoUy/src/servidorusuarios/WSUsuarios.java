
package servidorusuarios;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "WSUsuarios", targetNamespace = "http://servidorUsuarios/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSUsuarios {


    /**
     * 
     * @param fileName
     * @return
     *     returns byte[]
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/getFileRequest", output = "http://servidorUsuarios/WSUsuarios/getFileResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://servidorUsuarios/WSUsuarios/getFile/Fault/IOException")
    })
    public byte[] getFile(
        @WebParam(name = "fileName", partName = "fileName")
        String fileName)
        throws IOException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorusuarios.StringDTActividadMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/obtenerActividadesConfirmadasDeProveedorRequest", output = "http://servidorUsuarios/WSUsuarios/obtenerActividadesConfirmadasDeProveedorResponse")
    public StringDTActividadMap obtenerActividadesConfirmadasDeProveedor(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/existeUsuarioNicknameEmailRequest", output = "http://servidorUsuarios/WSUsuarios/existeUsuarioNicknameEmailResponse")
    public boolean existeUsuarioNicknameEmail(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorusuarios.StringDTSalidaMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/obtenerSalidasDeActividadesRequest", output = "http://servidorUsuarios/WSUsuarios/obtenerSalidasDeActividadesResponse")
    public StringDTSalidaMap obtenerSalidasDeActividades(
        @WebParam(name = "arg0", partName = "arg0")
        StringDTActividadMap arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorusuarios.StringDTUsuarioMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/darDatosUsuariosSeguidosRequest", output = "http://servidorUsuarios/WSUsuarios/darDatosUsuariosSeguidosResponse")
    public StringDTUsuarioMap darDatosUsuariosSeguidos(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://servidorUsuarios/WSUsuarios/dejarDeSeguirUsuarioRequest", output = "http://servidorUsuarios/WSUsuarios/dejarDeSeguirUsuarioResponse")
    public void dejarDeSeguirUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     * @throws CampoIncompletoException_Exception
     * @throws ContrasenasNoCoincidenException_Exception
     * @throws UsuarioRepetidoException_Exception
     */
    @WebMethod
    @Action(input = "http://servidorUsuarios/WSUsuarios/confirmarAltaUsuarioRequest", output = "http://servidorUsuarios/WSUsuarios/confirmarAltaUsuarioResponse", fault = {
        @FaultAction(className = UsuarioRepetidoException_Exception.class, value = "http://servidorUsuarios/WSUsuarios/confirmarAltaUsuario/Fault/UsuarioRepetidoException"),
        @FaultAction(className = CampoIncompletoException_Exception.class, value = "http://servidorUsuarios/WSUsuarios/confirmarAltaUsuario/Fault/CampoIncompletoException"),
        @FaultAction(className = ContrasenasNoCoincidenException_Exception.class, value = "http://servidorUsuarios/WSUsuarios/confirmarAltaUsuario/Fault/ContrasenasNoCoincidenException")
    })
    public void confirmarAltaUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        DtUsuario arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws CampoIncompletoException_Exception, ContrasenasNoCoincidenException_Exception, UsuarioRepetidoException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorusuarios.StringDTActividadMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/obtenerActividadesDeProveedorRequest", output = "http://servidorUsuarios/WSUsuarios/obtenerActividadesDeProveedorResponse")
    public StringDTActividadMap obtenerActividadesDeProveedor(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/existeUsuarioNicknameRequest", output = "http://servidorUsuarios/WSUsuarios/existeUsuarioNicknameResponse")
    public boolean existeUsuarioNickname(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @return
     *     returns servidorusuarios.StringDTUsuarioMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/obtenerUsuariosNicknameRequest", output = "http://servidorUsuarios/WSUsuarios/obtenerUsuariosNicknameResponse")
    public StringDTUsuarioMap obtenerUsuariosNickname();

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/contraCorrectaRequest", output = "http://servidorUsuarios/WSUsuarios/contraCorrectaResponse")
    public boolean contraCorrecta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorusuarios.DtProveedor
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/darProveedorRequest", output = "http://servidorUsuarios/WSUsuarios/darProveedorResponse")
    public DtProveedor darProveedor(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/existeUsuarioEmailRequest", output = "http://servidorUsuarios/WSUsuarios/existeUsuarioEmailResponse")
    public boolean existeUsuarioEmail(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorusuarios.DtTurista
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/darTuristaRequest", output = "http://servidorUsuarios/WSUsuarios/darTuristaResponse")
    public DtTurista darTurista(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorusuarios.DtUsuario
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/darUsuarioNickRequest", output = "http://servidorUsuarios/WSUsuarios/darUsuarioNickResponse")
    public DtUsuario darUsuarioNick(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/usuarioSigueARequest", output = "http://servidorUsuarios/WSUsuarios/usuarioSigueAResponse")
    public boolean usuarioSigueA(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://servidorUsuarios/WSUsuarios/seguirUsuarioRequest", output = "http://servidorUsuarios/WSUsuarios/seguirUsuarioResponse")
    public void seguirUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @throws CampoIncompletoException_Exception
     */
    @WebMethod
    @Action(input = "http://servidorUsuarios/WSUsuarios/modificarUsuarioRequest", output = "http://servidorUsuarios/WSUsuarios/modificarUsuarioResponse", fault = {
        @FaultAction(className = CampoIncompletoException_Exception.class, value = "http://servidorUsuarios/WSUsuarios/modificarUsuario/Fault/CampoIncompletoException")
    })
    public void modificarUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        DtUsuario arg0)
        throws CampoIncompletoException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     */
    @WebMethod
    @Action(input = "http://servidorUsuarios/WSUsuarios/guardarImgRequest", output = "http://servidorUsuarios/WSUsuarios/guardarImgResponse")
    public void guardarImg(
        @WebParam(name = "arg0", partName = "arg0")
        boolean arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        byte[] arg2);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorusuarios.StringDTUsuarioMap
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/darDatosUsuariosQueSiguenRequest", output = "http://servidorUsuarios/WSUsuarios/darDatosUsuariosQueSiguenResponse")
    public StringDTUsuarioMap darDatosUsuariosQueSiguen(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorusuarios.DtUsuario
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/darDatosUsuarioConEmailONicknameRequest", output = "http://servidorUsuarios/WSUsuarios/darDatosUsuarioConEmailONicknameResponse")
    public DtUsuario darDatosUsuarioConEmailONickname(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorusuarios.SetOfDTInscripcion
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/obtenerSalidasInscriptoRequest", output = "http://servidorUsuarios/WSUsuarios/obtenerSalidasInscriptoResponse")
    public SetOfDTInscripcion obtenerSalidasInscripto(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidorusuarios.SetOfDTCompraPaquete
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidorUsuarios/WSUsuarios/obtenerDatosPaquetesCompradosRequest", output = "http://servidorUsuarios/WSUsuarios/obtenerDatosPaquetesCompradosResponse")
    public SetOfDTCompraPaquete obtenerDatosPaquetesComprados(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

}
